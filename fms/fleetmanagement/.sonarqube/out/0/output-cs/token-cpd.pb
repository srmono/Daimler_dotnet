√
kI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\config\TruckDbContext.cs
	namespace 	
fleetmanagement
 
. 
config  
;  !
public 
class 
TruckDbContext 
: 
	DbContext '
{ 
public 

TruckDbContext 
( 
DbContextOptions *
<* +
TruckDbContext+ 9
>9 :
options; B
)B C
:D E
baseF J
(J K
optionsK R
)R S
{T U
}V W
public

 

DbSet

 
<

 
Truck

 
>

 
Trucks

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
modelBuilder 
. 
Entity 
< 
Truck !
>! "
(" #
)# $
.$ %
HasKey% +
(+ ,
t, -
=>. 0
t1 2
.2 3
Id3 5
)5 6
;6 7
base 
. 
OnModelCreating 
( 
modelBuilder )
)) *
;* +
} 
} ô
gI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\dtos\TruckRequest.cs
	namespace 	
fleetmanagement
 
. 
dtos 
{ 
public 

class 
TruckRequest 
{ 
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
Model 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
Year 
{ 
get 
; 
set "
;" #
}$ %
} 
}		 Æ
hI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\dtos\TruckResponse.cs
	namespace 	
fleetmanagement
 
. 
dtos 
{ 
public 

class 
TruckResponse 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
Model 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
Year 
{ 
get 
; 
set "
;" #
}$ %
}		 
}

 Ï
pI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\dtos\ValidationErrorDetail.cs
	namespace 	
fleetmanagement
 
. 
dtos 
; 
public 
class !
ValidationErrorDetail "
{ 
public 

string 
	FieldName 
{ 
get !
;! "
set# &
;& '
}( )
public 

string 
ErrorMessage 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
!
ValidationErrorDetail  
(  !
string! '
	fieldName( 1
,1 2
string3 9
errorMessage: F
)F G
{		 
	FieldName

 
=

 
	fieldName

 
;

 
ErrorMessage 
= 
errorMessage #
;# $
} 
} ˝
zI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\dtos\ValidationErrorFailureException.cs
	namespace 	
fleetmanagement
 
. 
dtos 
{ 
public 

class +
ValidationErrorFaulureException 0
:1 2
	Exception3 <
{ 
public 
List 
< !
ValidationErrorDetail )
>) *
Errors+ 1
{2 3
get4 7
;7 8
}9 :
public +
ValidationErrorFaulureException .
(. /
IEnumerable/ :
<: ;!
ValidationErrorDetail; P
>P Q
errorsR X
)X Y
: 
base 
( 
$str &
)& '
{ 	
Errors 
= 
errors 
. 
ToList "
(" #
)# $
;$ %
} 	
} 
})) £
lI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\dtos\ValidationFailure.cs
	namespace 	
fleetmanagement
 
. 
dtos 
{ 
public 

class 
ValidationFailure "
{ 
public 
string 
? 
Message 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Details 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
ValidationFailure  
(  !
string! '
message( /
,/ 0
string1 7
?7 8
details9 @
=A B
nullC G
)G H
{		 	
Message

 
=

 
message

 
;

 
Details 
= 
details 
; 
} 	
} 
} è
uI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\dtos\ValidationFailureException.cs
public 
class &
ValidationFailureException '
:( )
	Exception* 3
{ 
public 

ValidationFailure 
[ 
] 
Failures '
{( )
get* -
;- .
}/ 0
public 
&
ValidationFailureException %
(% &
ValidationFailure& 7
[7 8
]8 9
failures: B
)B C
:		 	
base		
 
(		 
$str		 "
)		" #
{

 
Failures 
= 
failures 
; 
} 
} £
sI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\endpoints\CreateTruckEndpoint.cs
public 
class 
CreateTruckEndpoint  
:  !
Endpoint" *
<* +
TruckRequest+ 7
,7 8
TruckResponse9 F
>F G
{ 
private 
readonly 
ITruckRepository %
_respository& 2
;2 3
public

 

CreateTruckEndpoint

 
(

 
ITruckRepository

 /

repository

0 :
)

: ;
{

; <
_respository 
= 

repository !
;! "
} 
public 

override 
void 
	Configure "
(" #
)# $
{ 
Verbs 
( 
Http 
. 
POST 
) 
; 
Routes 
( 
$str 
) 
; 
AllowAnonymous 
( 
) 
; 
} 
public 

override 
async 
Task 
HandleAsync *
(* +
TruckRequest+ 7
req8 ;
,; <
CancellationToken= N
ctO Q
)Q R
{R S
var 
newTruck 
= 
new 
Truck  
(  !
req 
. 
Name 
?? 
string 
. 
Empty $
,$ %
req 
. 
Model 
?? 
string 
.  
Empty  %
,% &
req 
. 
Year 
) 	
;	 

var 
createdTruck 
= 
await  
_respository! -
.- .
AddTruckAsync. ;
(; <
newTruck< D
)D E
;E F
var 
response 
= 
new 
TruckResponse (
{) *
Id   
=   
createdTruck   
.   
Id    
,    !
Name!! 
=!! 
createdTruck!! 
.!!  
Name!!  $
,!!$ %
Model"" 
="" 
createdTruck""  
.""  !
Model""! &
,""& '
Year## 
=## 
createdTruck## 
.##  
Year##  $
}$$ 	
;$$	 

await%% 
	SendAsync%% 
(%% 
response%%  
)%%  !
;%%! "
}&& 
}'' ‘
nI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\endpoints\DeleteEndpoint.cs
public 
class 
DeleteEndpoint 
: "
EndpointWithoutRequest 3
<3 4
bool4 8
>8 9
{: ;
private 
readonly 
ITruckRepository %
_respository& 2
;2 3
public 

DeleteEndpoint 
( 
ITruckRepository *

repository+ 5
)5 6
{6 7
_respository 
= 

repository !
;! "
}		 
public 

override 
void 
	Configure "
(" #
)# $
{ 
Verbs 
( 
Http 
. 
DELETE 
) 
; 
Routes 
( 
$str %
)% &
;& '
AllowAnonymous 
( 
) 
; 
} 
public 

override 
async 
Task 
HandleAsync *
(* +
CancellationToken+ <
ct= ?
)? @
{@ A
var 
id 
= 
Route 
< 
int 
> 
( 
$str  
)  !
;! "
var 
result 
= 
await 
_respository '
.' (
DeleteTruckAsync( 8
(8 9
id9 ;
); <
;< =
if 

(
 
! 
result 
) 
{ 
await 
SendNotFoundAsync #
(# $
)$ %
;% &
return 
; 
} 	
await 
SendNoContentAsync  
(  !
)! "
;" #
} 
} ë
tI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\endpoints\GetAllTrucksEndpoint.cs
public 
class  
GetAllTrucksEndpoint !
:" #"
EndpointWithoutRequest$ :
<: ;
IEnumerable; F
<F G
TruckResponseG T
>T U
>U V
{ 
private 
readonly 
ITruckRepository %
_repository& 1
;1 2
public		 
 
GetAllTrucksEndpoint		 
(		  
ITruckRepository		  0

repository		1 ;
)		; <
{

 
_repository 
= 

repository  
;  !
} 
public 

override 
void 
	Configure "
(" #
)# $
{ 
Verbs 
( 
Http 
. 
GET 
) 
; 
Routes 
( 
$str 
) 
; 
AllowAnonymous 
( 
) 
; 
} 
public 

override 
async 
Task 
HandleAsync *
(* +
CancellationToken+ <
ct= ?
)? @
{ 
var 
trucks 
= 
await 
_repository &
.& '
GetAllTrucksAsync' 8
(8 9
)9 :
;: ;
await 
	SendAsync 
( 
trucks 
. 
Select %
(% &
t& '
=>( *
new+ .
TruckResponse/ <
{ 	
Id 
= 
t 
. 
Id 
, 
Name 
= 
t 
. 
Name 
, 
Model 
= 
t 
. 
Model 
, 
Year 
= 
t 
. 
Year 
} 	
)	 

)
 
; 
} 
}   ö$
sI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\endpoints\UpdateTruckEndpoint.cs
public 
class 
UpdateTruckEndpoint  
:! "
Endpoint# +
<+ ,
TruckRequest, 8
,8 9
TruckResponse: G
>G H
{ 
private 
readonly 
ITruckRepository %
_truckRepository& 6
;6 7
public

 

UpdateTruckEndpoint

 
(

 
ITruckRepository

 /

repository

0 :
)

: ;
{ 
_truckRepository 
= 

repository %
;% &
} 
public 

override 
void 
	Configure "
(" #
)# $
{ 
Verbs 
( 
Http 
. 
PUT 
) 
; 
Routes 
( 
$str %
)% &
;& '
DontCatchExceptions 
( 
) 
; 
AllowAnonymous 
( 
) 
; 
} 
public 
override 
async 
Task 
HandleAsync &
(& '
TruckRequest' 3
req4 7
,7 8
CancellationToken9 J
ctK M
)M N
{ 
var 
id 

= 
Route 
< 
int 
> 
( 
$str 
) 
; 
var 
existingTruck 
= 
await 
_truckRepository .
.. /
GetTruckByIdAsync/ @
(@ A
idA C
)C D
;D E
if 
( 
existingTruck 
== 
null 
) 
{ 
await 
SendNotFoundAsync 
(  
)  !
;! "
return 
; 
}   
if"" 
("" 
req"" 
."" 
Year"" 
!="" 
$num"" 
&&"" 
("" 
req"" 
."" 
Year"" "
<""# $
$num""% )
||""* ,
req""- 0
.""0 1
Year""1 5
>""6 7
DateTime""8 @
.""@ A
Now""A D
.""D E
Year""E I
)""I J
)""J K
{## 
throw$$ 
new$$ +
ValidationErrorFaulureException$$ 1
($$1 2
new$$2 5
[$$5 6
]$$6 7
{%% 	
new&& !
ValidationErrorDetail&& %
(&&% &
$str&&& ,
,&&, -
$"&&. 0
$str&&0 P
{&&P Q
DateTime&&Q Y
.&&Y Z
Now&&Z ]
.&&] ^
Year&&^ b
}&&b c
$str&&c d
"&&d e
)&&e f
}'' 	
)''	 

;''
 
}(( 
existingTruck** 
.** 
Name** 
=** 
req** 
.** 
Name** !
??**" $
existingTruck**% 2
.**2 3
Name**3 7
;**7 8
existingTruck++ 
.++ 
Model++ 
=++ 
req++ 
.++ 
Model++ #
??++$ &
existingTruck++' 4
.++4 5
Model++5 :
;++: ;
existingTruck,, 
.,, 
Year,, 
=,, 
req,, 
.,, 
Year,, !
!=,," $
$num,,% &
?,,' (
req,,) ,
.,,, -
Year,,- 1
:,,2 3
existingTruck,,4 A
.,,A B
Year,,B F
;,,F G
var.. 
updatedTruck.. 
=.. 
await.. 
_truckRepository.. -
...- .
UpdateTruckAsync... >
(..> ?
existingTruck..? L
)..L M
;..M N
await00 	
	SendAsync00
 
(00 
new00 
TruckResponse00 %
{11 
Id22 

=22 
updatedTruck22 
.22 
Id22 
,22 
Name33 
=33 
updatedTruck33 
.33 
Name33  
,33  !
Model44 
=44 
updatedTruck44 
.44 
Model44 "
,44" #
Year55 
=55 
updatedTruck55 
.55 
Year55  
}77 
)77 
;77 
}88 
};; ﬂ

dI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\entities\Truck.cs
	namespace 	
fleetmanagement
 
. 
entities "
{ 
public 

class 
Truck 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
Model 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
Year 
{ 
get 
; 
set "
;" #
}$ %
public

 
Truck

 
(

 
string

 
name

  
,

  !
string

" (
model

) .
,

. /
int

0 3
year

4 8
)

8 9
{ 	
Name 
= 
name 
; 
Model 
= 
model 
; 
Year 
= 
year 
; 
} 	
} 
} € 
ÅI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\middleware\CustomExceptionHandlerMiddleware.cs
	namespace 	
fleetmanagement
 
. 

middleware $
{ 
public		 

class		 ,
 CustomExceptionHandlerMiddleware		 1
{

 
private 
readonly 
RequestDelegate (
_next) .
;. /
public ,
 CustomExceptionHandlerMiddleware /
(/ 0
RequestDelegate0 ?
next@ D
)D E
{ 	
_next 
= 
next 
; 
} 	
public 
async 
Task 
InvokeAsync %
(% &
HttpContext& 1
context2 9
)9 :
{ 	
try 
{ 
await 
_next 
( 
context #
)# $
;$ %
} 
catch 
( +
ValidationErrorFaulureException 2
ex3 5
)5 6
{ 
var 
validationErrors $
=% &
ex' )
.) *
Errors* 0
.0 1
Select1 7
(7 8
e8 9
=>: <
new= @
{ 
Field 
= 
e 
. 
	FieldName '
,' (
Message 
= 
e 
.  
ErrorMessage  ,
} 
) 
; 
var!! 
response!! 
=!! 
new!! "
{"" 
Status## 
=## 
$str## *
,##* +
Code$$ 
=$$ 
($$ 
int$$ 
)$$  
HttpStatusCode$$  .
.$$. /

BadRequest$$/ 9
,$$9 :
Reason%% 
=%% 
ex%% 
.%%  
Message%%  '
,%%' (
Errors&& 
=&& 
validationErrors&& -
}'' 
;'' 
context)) 
.)) 
Response))  
.))  !

StatusCode))! +
=)), -
()). /
int))/ 2
)))2 3
HttpStatusCode))3 A
.))A B

BadRequest))B L
;))L M
context** 
.** 
Response**  
.**  !
ContentType**! ,
=**- .
$str**/ A
;**A B
await,, 
context,, 
.,, 
Response,, &
.,,& '
WriteAsJsonAsync,,' 7
(,,7 8
response,,8 @
),,@ A
;,,A B
}-- 
catch.. 
(.. 
	Exception.. 
ex.. 
)..  
{// 
Console11 
.11 
	WriteLine11 !
(11! "
$"11" $
$str11$ 9
{119 :
ex11: <
.11< =
Message11= D
}11D E
"11E F
)11F G
;11G H
var33 
response33 
=33 
new33 "
{44 
Status55 
=55 
$str55 5
,555 6
Code66 
=66 
(66 
int66 
)66  
HttpStatusCode66  .
.66. /
InternalServerError66/ B
,66B C
Reason77 
=77 
ex77 
.77  
Message77  '
,77' (
Note88 
=88 
$str88 A
}99 
;99 
context;; 
.;; 
Response;;  
.;;  !

StatusCode;;! +
=;;, -
(;;. /
int;;/ 2
);;2 3
HttpStatusCode;;3 A
.;;A B
InternalServerError;;B U
;;;U V
context<< 
.<< 
Response<<  
.<<  !
ContentType<<! ,
=<<- .
$str<</ A
;<<A B
await>> 
context>> 
.>> 
Response>> &
.>>& '
WriteAsJsonAsync>>' 7
(>>7 8
response>>8 @
)>>@ A
;>>A B
}?? 
}@@ 	
}AA 
}BB ƒ
tI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\middleware\ExceptionMiddleware.cs
public 
class 
ExceptionMiddleware  
{ 
private 
readonly 
RequestDelegate $
_next% *
;* +
public

 

ExceptionMiddleware

 
(

 
RequestDelegate

 .
next

/ 3
)

3 4
{ 
_next 
= 
next 
; 
} 
public 

async 
Task 
InvokeAsync !
(! "
HttpContext" -
context. 5
)5 6
{ 
try 
{ 	
await 
_next 
( 
context 
)  
;  !
} 	
catch 
( 
	Exception 
ex 
) 
{ 	
await  
HandleExceptionAsync &
(& '
context' .
,. /
ex0 2
)2 3
;3 4
} 	
} 
private 
static 
Task  
HandleExceptionAsync ,
(, -
HttpContext- 8
context9 @
,@ A
	ExceptionB K
	exceptionL U
)U V
{ 
context 
. 
Response 
. 
ContentType $
=% &
$str' 9
;9 :
context 
. 
Response 
. 

StatusCode #
=$ %
(& '
int' *
)* +
HttpStatusCode+ 9
.9 :
InternalServerError: M
;M N
var   
response   
=   
new   
ValidationFailure   ,
(  , -
message!! 
:!! 
$str!! L
,!!L M
details"" 
:"" 
	exception"" 
."" 
Message"" &
)## 	
;##	 

var%% 
jsonResponse%% 
=%% 
JsonSerializer%% )
.%%) *
	Serialize%%* 3
(%%3 4
response%%4 <
)%%< =
;%%= >
return&& 
context&& 
.&& 
Response&& 
.&&  

WriteAsync&&  *
(&&* +
jsonResponse&&+ 7
)&&7 8
;&&8 9
}'' 
}(( ∆
zI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\middleware\GlobalExceptionMiddleware.cs
	namespace		 	
fleetmanagement		
 
.		 
	middlware		 #
;		# $
public 
class %
GlobalExceptionMiddleware &
{' (
private 
readonly 
ILogger 
< %
GlobalExceptionMiddleware 6
>6 7
_logger8 ?
;? @
public 
%
GlobalExceptionMiddleware $
($ %
ILogger 
< %
GlobalExceptionMiddleware )
>) *
logger+ 1
) 
{ 
_logger 
= 
logger 
; 
} 
public 

Task 
HandleAsync 
( 
	Exception %
ex& (
,( )
HttpContext* 5
httpContext6 A
)A B
{B C
_logger	 
. 
LogError 
( 
ex 
, 
$str >
)> ?
;? @
var 

statusCode 
= 
HttpStatusCode '
.' (
InternalServerError( ;
;; <
if 

(
 
ex 
is  
KeyNotFoundException %
)% &
{& '

statusCode   
=   
HttpStatusCode   '
.  ' (
NotFound  ( 0
;  0 1
}!! 	
else!!
 
if!! 
(!! 
ex!! 
is!! 
ArgumentException!! )
)!!) *
{!!* +

statusCode"" 
="" 
HttpStatusCode"" '
.""' (

BadRequest""( 2
;""2 3
}## 	
httpContext&& 
.&& 
Response&& 
.&& 

StatusCode&& '
=&&( )
(&&* +
int&&+ .
)&&. /

statusCode&&/ 9
;&&9 :
return(( 
httpContext(( 
.(( 
Response(( #
.((# $
WriteAsJsonAsync(($ 4
(((4 5
new((5 8
{((9 :
message((; B
=((C D
ex((E G
.((G H
Message((H O
}((P Q
)((Q R
;((R S
}** 
};; à)
]I:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\Program.cs
var		 
builder		 
=		 
WebApplication		 
.		 
CreateBuilder		 *
(		* +
args		+ /
)		/ 0
;		0 1
builder 
. 
WebHost 
. 
ConfigureKestrel  
(  !
serverOptions! .
=>/ 1
{ 
serverOptions 
. 
ListenAnyIP 
( 
$num "
)" #
;# $
} 
) 
; 
var 
connectionString 
= 
Environment "
." #"
GetEnvironmentVariable# 9
(9 :
$str: `
)` a
?? 
builder 
. 
Configuration 
. 
GetConnectionString 0
(0 1
$str1 D
)D E
;E F
Console 
. 
	WriteLine 
( 
$" 
$str 5
{5 6
connectionString6 F
}F G
"G H
)H I
;I J
builder 
. 
Services 
. 
AddDbContext 
< 
TruckDbContext ,
>, -
(- .
options. 5
=>6 8
options 
. 
UseMySql 
( 
connectionString %
,% &
new' *
MySqlServerVersion+ =
(= >
new> A
VersionB I
(I J
$numJ K
,K L
$numM N
,N O
$numP R
)R S
)S T
,T U
mySqlOptions 
=> 
mySqlOptions $
.$ % 
EnableRetryOnFailure% 9
(9 :
): ;
) 
) 
; 
builder   
.   
Services   
.   
	AddScoped   
<   
ITruckRepository   +
,  + ,
TruckRepository  - <
>  < =
(  = >
)  > ?
;  ? @
builder!! 
.!! 
Services!! 
.!! 
AddFastEndpoints!! !
(!!! "
)!!" #
;!!# $
var## 
app## 
=## 	
builder##
 
.## 
Build## 
(## 
)## 
;## 
int&& 

maxRetries&& 
=&& 
$num&& 
;&& 
for'' 
('' 
int'' 
retry''	 
='' 
$num'' 
;'' 
retry'' 
<='' 

maxRetries'' '
;''' (
retry'') .
++''. 0
)''0 1
{(( 
try)) 
{** 
using++ 
(++ 
var++ 
scope++ 
=++ 
app++ 
.++ 
Services++ '
.++' (
CreateScope++( 3
(++3 4
)++4 5
)++5 6
{,, 	
var-- 
	dbContext-- 
=-- 
scope-- !
.--! "
ServiceProvider--" 1
.--1 2
GetRequiredService--2 D
<--D E
TruckDbContext--E S
>--S T
(--T U
)--U V
;--V W
Console// 
.// 
	WriteLine// 
(// 
$str// D
)//D E
;//E F
	dbContext00 
.00 
Database00 
.00 
EnsureDeleted00 ,
(00, -
)00- .
;00. /
Console22 
.22 
	WriteLine22 
(22 
$str22 ?
)22? @
;22@ A
	dbContext33 
.33 
Database33 
.33 
EnsureCreated33 ,
(33, -
)33- .
;33. /
Console55 
.55 
	WriteLine55 
(55 
$str55 C
)55C D
;55D E
}66 	
break77 
;77 
}88 
catch99 	
(99
 
	Exception99 
ex99 
)99 
{:: 
Console;; 
.;; 
	WriteLine;; 
(;; 
$";; 
$str;; ]
{;;] ^
retry;;^ c
};;c d
$str;;d e
{;;e f

maxRetries;;f p
};;p q
$str;;q r
";;r s
);;s t
;;;t u
Console<< 
.<< 
	WriteLine<< 
(<< 
$"<< 
$str<< '
{<<' (
ex<<( *
.<<* +
Message<<+ 2
}<<2 3
"<<3 4
)<<4 5
;<<5 6
Thread== 
.== 
Sleep== 
(== 
$num== 
)== 
;== 
}>> 
}?? 
appBB 
.BB 
UseMiddlewareBB 
<BB ,
 CustomExceptionHandlerMiddlewareBB 2
>BB2 3
(BB3 4
)BB4 5
;BB5 6
appEE 
.EE 
UseFastEndpointsEE 
(EE 
)EE 
;EE 
appHH 
.HH 
RunHH 
(HH 
)HH 	
;HH	 
Ë	
tI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\respositories\ITruckRepository.cs
	namespace 	
fleetmanagement
 
. 
repositories &
;& '
public 
	interface 
ITruckRepository !
{ 
Task 
< 	
IEnumerable	 
< 
Truck 
> 
> 
GetAllTrucksAsync .
(. /
)/ 0
;0 1
Task 
< 	
Truck	 
? 
> 
GetTruckByIdAsync "
(" #
int# &
id' )
)) *
;* +
Task		 
<		 	
Truck			 
>		 
AddTruckAsync		 
(		 
Truck		 #
truck		$ )
)		) *
;		* +
Task

 
<

 	
Truck

	 
?

 
>

 
UpdateTruckAsync

 !
(

! "
Truck

" '
truck

( -
)

- .
;

. /
Task 
< 	
bool	 
> 
DeleteTruckAsync 
(  
int  #
id$ &
)& '
;' (
} ﬁ!
sI:\Training\Just_Compile\Daimler\phase2\c#.net_stack\resources\fms\fleetmanagement\respositories\TruckRepository.cs
	namespace 	
fleetmanagement
 
. 
repositories &
;& '
public 
class 
TruckRepository 
: 
ITruckRepository /
{ 
private		 
readonly		 
TruckDbContext		 #
_context		$ ,
;		, -
public 

TruckRepository 
( 
TruckDbContext )
context* 1
)1 2
{ 
_context 
= 
context 
; 
} 
public 

async 
Task 
< 
IEnumerable !
<! "
Truck" '
>' (
>( )
GetAllTrucksAsync* ;
(; <
)< =
=>> @
awaitA F
_contextG O
.O P
TrucksP V
.V W
ToListAsyncW b
(b c
)c d
;d e
public 

async 
Task 
< 
Truck 
? 
> 
GetTruckByIdAsync /
(/ 0
int0 3
id4 6
)6 7
=>8 :
await; @
_contextA I
.I J
TrucksJ P
.P Q
	FindAsyncQ Z
(Z [
id[ ]
)] ^
;^ _
public 

async 
Task 
< 
Truck 
> 
AddTruckAsync *
(* +
Truck+ 0
truck1 6
)6 7
{ 
_context 
. 
Trucks 
. 
Add 
( 
truck !
)! "
;" #
await 
_context 
. 
SaveChangesAsync '
(' (
)( )
;) *
return 
truck 
; 
} 
public 

async 
Task 
< 
Truck 
? 
> 
UpdateTruckAsync .
(. /
Truck/ 4
truck5 :
): ;
{ 
var 
existingTruck 
= 
await !
_context" *
.* +
Trucks+ 1
.1 2
	FindAsync2 ;
(; <
truck< A
.A B
IdB D
)D E
;E F
if 

( 
existingTruck 
== 
null !
)! "
return# )
null* .
;. /
existingTruck   
.   
Name   
=   
truck   "
.  " #
Name  # '
;  ' (
existingTruck!! 
.!! 
Model!! 
=!! 
truck!! #
.!!# $
Model!!$ )
;!!) *
existingTruck"" 
."" 
Year"" 
="" 
truck"" "
.""" #
Year""# '
;""' (
await$$ 
_context$$ 
.$$ 
SaveChangesAsync$$ '
($$' (
)$$( )
;$$) *
return%% 
existingTruck%% 
;%% 
}&& 
public(( 

async(( 
Task(( 
<(( 
bool(( 
>(( 
DeleteTruckAsync(( ,
(((, -
int((- 0
id((1 3
)((3 4
{)) 
var** 
truck** 
=** 
await** 
_context** "
.**" #
Trucks**# )
.**) *
	FindAsync*** 3
(**3 4
id**4 6
)**6 7
;**7 8
if++ 

(++ 
truck++ 
==++ 
null++ 
)++ 
return++ !
false++" '
;++' (
_context-- 
.-- 
Trucks-- 
.-- 
Remove-- 
(-- 
truck-- $
)--$ %
;--% &
await.. 
_context.. 
... 
SaveChangesAsync.. '
(..' (
)..( )
;..) *
return// 
true// 
;// 
}00 
}11 